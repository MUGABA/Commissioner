{"version":3,"file":"static/js/1272.e169aac9.chunk.js","mappings":"uWAWMA,GAAUC,EAAAA,EAAAA,GAAOC,EAAAA,EAAPD,EAAY,iBAAO,CAAEE,QAAS,OAAQC,WAAY,SAAU,IAEtEC,GAAaJ,EAAAA,EAAAA,GAAOD,EAAPC,EAAgB,iBAAO,CAAEK,eAAgB,SAAU,IAQzDC,GAAYN,EAAAA,EAAAA,GAAOI,EAAPJ,EAAmB,iBAAO,CACjDO,MAAO,OACP,UAAW,CACTA,MAAO,OACPC,OAAQ,OACRC,aAAc,IAEhBC,YAAa,UACd,IAEKC,EAAmBC,EAAAA,KAAaC,MAAM,CAC1CC,YAAaF,EAAAA,KAAaG,SAAS,2BACnCC,IAAKJ,EAAAA,KAAaG,SAAS,kBAC3BE,OAAQL,EAAAA,KAAaG,SAAS,+BAC9BG,OAAQN,EAAAA,KAAaG,SAAS,+BAC9BI,iBAAkBP,EAAAA,KAAaQ,SAAS,iCACxCC,eAAgBT,EAAAA,KAAaQ,SAAS,6BACtCE,cAAeV,EAAAA,KAAaQ,SAAS,2CACrCG,UAAWX,EAAAA,KAAaQ,SAAS,wCACjCI,WAAYZ,EAAAA,KAAaQ,SAAS,+BAClCK,mBAAoBb,EAAAA,KAAaQ,SAAS,oDAC1CM,SAAUd,EAAAA,KAAaQ,SAAS,mDAG5BO,EAAW,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOC,GAAI,IAAAC,EAAA,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACVC,EAAAA,EAAAA,KAAW,GAADC,OAAIC,EAAAA,EAAAA,IAAO,gCAAgCR,GAAM,KAAD,EAAnE,OAAJC,EAAIE,EAAAM,KAAAN,EAAAO,OAAA,SAEHT,GAAI,wBAAAE,EAAAQ,OAAA,GAAAZ,EAAA,KACZ,gBAJgBa,GAAA,OAAAjB,EAAAkB,MAAA,KAAAC,UAAA,KAgTjB,UA1S8B,YACdC,EAAAA,EAAAA,KAAd,IACMC,GAAWC,EAAAA,EAAAA,MACjBC,GAA8BC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAtCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAC1BI,GAA8BL,EAAAA,EAAAA,UAAS,CACrCtC,YAAa,GACbE,IAAK,GACLC,OAAQ,GACRC,OAAQ,GACRC,iBAAkB,GAClBE,eAAgB,GAChBC,cAAe,GACfC,UAAW,GACXC,WAAY,GACZC,mBAAoB,GACpBC,SAAU,KACVgC,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAZKE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAcpBG,EAAY,eAAAC,GAAAjC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAgC,IAAA,IAAAC,EAAA/B,EAAA,OAAAH,EAAAA,EAAAA,KAAAK,MAAA,SAAA8B,GAAA,cAAAA,EAAA5B,KAAA4B,EAAA3B,MAAA,cAAA2B,EAAA3B,KAAA,EAGTC,EAAAA,EAAAA,IAAU,GAADC,OAAIC,EAAAA,EAAAA,IAAO,qBAAoB,KAAD,EAAAuB,EAAAC,EAAAvB,MADvCT,EAAI+B,EAAZ/B,KAAQA,OAGA2B,EAAW3B,GAAM,wBAAAgC,EAAArB,OAAA,GAAAmB,EAAA,KAC5B,kBANiB,OAAAD,EAAAhB,MAAA,KAAAC,UAAA,MAQlBmB,EAAAA,EAAAA,YAAU,WACRL,GACF,GAAG,IAEH,IAAMM,EAAgB,eAAAC,GAAAvC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAsC,EAAOC,GAAM,OAAAxC,EAAAA,EAAAA,KAAAK,MAAA,SAAAoC,GAAA,cAAAA,EAAAlC,KAAAkC,EAAAjC,MAAA,OACnB,OAAjBkB,GAAW,GAAMe,EAAAlC,KAAA,EAAAkC,EAAAjC,KAAA,EAGTX,EAAY2C,GAAQ,KAAD,EACzBrB,EAAS,+BACTO,GAAW,GAAOe,EAAAjC,KAAA,gBAAAiC,EAAAlC,KAAA,EAAAkC,EAAAC,GAAAD,EAAA,SAElBE,QAAQC,IAAGH,EAAAC,IACXhB,GAAW,GAAO,yBAAAe,EAAA3B,OAAA,GAAAyB,EAAA,kBAErB,gBAXqBM,GAAA,OAAAP,EAAAtB,MAAA,KAAAC,UAAA,KA2BhB6B,EAAgB,CACpB9D,YAHE6C,EAXF7C,aAc4B,GAC5BE,IAJE2C,EAVF3C,KAcY,GACZC,OALE0C,EATF1C,QAckB,GAClBC,OANEyC,EARFzC,QAckB,GAClBC,iBAPEwC,EAPFxC,kBAcsC,GACtCE,eAREsC,EANFtC,gBAckC,GAClCC,cATEqC,EALFrC,eAcgC,GAChCC,UAVEoC,EAJFpC,WAcwB,GACxBC,WAXEmC,EAHFnC,YAc0B,GAC1BC,mBAZEkC,EAFFlC,oBAc0C,GAC1CC,SAbEiC,EADFjC,UAcsB,IAGxB,OACEmD,EAAAA,EAAAA,KAACvE,EAAS,CAAAwE,UACRC,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAACC,UAAU,OAAMH,SAAA,EACpBD,EAAAA,EAAAA,KAACK,EAAAA,EAAU,CAACC,QAAQ,KAAKC,GAAI,CAAEC,UAAW,UAAWP,SAAC,6CAGtDD,EAAAA,EAAAA,KAACS,EAAAA,GAAI,CAACC,WAAS,EAAAT,UACbD,EAAAA,EAAAA,KAACS,EAAAA,GAAI,CAACE,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAGZ,UACxBD,EAAAA,EAAAA,KAAC5E,EAAAA,EAAG,CAAC0F,EAAG,EAAG1E,OAAO,OAAM6D,UACtBD,EAAAA,EAAAA,KAACe,EAAAA,GAAM,CACLC,oBAAkB,EAClBC,SAAU3B,EACVS,cAAeA,EACfjE,iBAAkBA,EAAiBmE,SAElC,SAAAiB,GAAA,IAAGzB,EAAMyB,EAANzB,OAAQ0B,EAAMD,EAANC,OAAQC,EAAOF,EAAPE,QAASC,EAAYH,EAAZG,aAAcC,EAAUJ,EAAVI,WAAYC,EAAYL,EAAZK,aAAY,OACjErB,EAAAA,EAAAA,MAAA,QAAMe,SAAUM,EAAatB,SAAA,EAC3BC,EAAAA,EAAAA,MAACO,EAAAA,GAAI,CAACC,WAAS,EAACc,QAAS,EAAEvB,SAAA,EACzBD,EAAAA,EAAAA,KAACS,EAAAA,GAAI,CAACE,MAAI,EAACE,GAAI,GAAIY,GAAI,EAAExB,UACvBD,EAAAA,EAAAA,KAAC0B,EAAAA,EAAS,CACRC,WAAS,EACTC,KAAK,QACLC,KAAK,OACLC,KAAK,cACLC,MAAM,eACNzB,QAAQ,WACR0B,OAAQV,EACRW,MAAOxC,EAAOxD,YACdiG,SAAUb,EACVc,WAAYf,EAAQnF,aAAekF,EAAOlF,YAC1CmG,MAAOC,QAAQlB,EAAOlF,aAAemF,EAAQnF,aAC7CsE,GAAI,CAAE+B,GAAI,QAIdtC,EAAAA,EAAAA,KAACS,EAAAA,GAAI,CAACE,MAAI,EAACE,GAAI,GAAIY,GAAI,EAAExB,UACvBD,EAAAA,EAAAA,KAAC0B,EAAAA,EAAS,CACRC,WAAS,EACTC,KAAK,QACLC,KAAK,SACLC,KAAK,MACLC,MAAM,iBACNzB,QAAQ,WACR0B,OAAQV,EACRW,MAAOxC,EAAOtD,IACd+F,SAAUb,EACVc,WAAYf,EAAQjF,KAAOgF,EAAOhF,IAClCiG,MAAOC,QAAQlB,EAAOhF,KAAOiF,EAAQjF,KACrCoE,GAAI,CAAE+B,GAAI,WAIhBpC,EAAAA,EAAAA,MAACO,EAAAA,GAAI,CAACC,WAAS,EAACc,QAAS,EAAEvB,SAAA,EACzBD,EAAAA,EAAAA,KAACS,EAAAA,GAAI,CAACE,MAAI,EAACE,GAAI,GAAIY,GAAI,EAAExB,UACvBD,EAAAA,EAAAA,KAAC0B,EAAAA,EAAS,CACRC,WAAS,EACTC,KAAK,QACLC,KAAK,OACLC,KAAK,SACLC,MAAM,yBACNzB,QAAQ,WACR0B,OAAQV,EACRW,MAAOxC,EAAOrD,OACd8F,SAAUb,EACVc,WAAYf,EAAQhF,QAAU+E,EAAO/E,OACrCgG,MAAOC,QAAQlB,EAAO/E,QAAUgF,EAAQhF,QACxCmE,GAAI,CAAE+B,GAAI,QAGdtC,EAAAA,EAAAA,KAACS,EAAAA,GAAI,CAACE,MAAI,EAACE,GAAI,GAAIY,GAAI,EAAExB,UACvBD,EAAAA,EAAAA,KAAC0B,EAAAA,EAAS,CACRC,WAAS,EACTC,KAAK,QACLE,KAAK,SACLD,KAAK,SACLE,MAAM,sBACNzB,QAAQ,WACR0B,OAAQV,EACRW,MAAOxC,EAAOpD,OACd6F,SAAUb,EACVc,WAAYf,EAAQ/E,QAAU8E,EAAO9E,OACrC+F,MAAOC,QAAQlB,EAAO9E,QAAU+E,EAAQ/E,QACxCkE,GAAI,CAAE+B,GAAI,WAIhBpC,EAAAA,EAAAA,MAACO,EAAAA,GAAI,CAACC,WAAS,EAACc,QAAS,EAAEvB,SAAA,EACzBD,EAAAA,EAAAA,KAACS,EAAAA,GAAI,CAACE,MAAI,EAACE,GAAI,GAAIY,GAAI,EAAExB,UACvBD,EAAAA,EAAAA,KAAC0B,EAAAA,EAAS,CACRC,WAAS,EACTC,KAAK,QACLC,KAAK,OACLC,KAAK,mBACLC,MAAM,2BACNzB,QAAQ,WACR0B,OAAQV,EACRW,MAAOxC,EAAOnD,iBACd4F,SAAUb,EACVc,WAAYf,EAAQ9E,kBAAoB6E,EAAO7E,iBAC/C8F,MAAOC,QAAQlB,EAAO7E,kBAAoB8E,EAAQ9E,kBAClDiE,GAAI,CAAE+B,GAAI,QAIdtC,EAAAA,EAAAA,KAACS,EAAAA,GAAI,CAACE,MAAI,EAACE,GAAI,GAAIY,GAAI,EAAExB,UACvBD,EAAAA,EAAAA,KAAC0B,EAAAA,EAAS,CACRC,WAAS,EACTC,KAAK,QACLE,KAAK,iBACLD,KAAK,OACLE,MAAM,yBACNzB,QAAQ,WACR0B,OAAQV,EACRW,MAAOxC,EAAOjD,eACd0F,SAAUb,EACVc,WAAYf,EAAQ5E,gBAAkB2E,EAAO3E,eAC7C4F,MAAOC,QAAQlB,EAAO3E,gBAAkB4E,EAAQ5E,gBAChD+D,GAAI,CAAE+B,GAAI,WAIhBpC,EAAAA,EAAAA,MAACO,EAAAA,GAAI,CAACC,WAAS,EAACc,QAAS,EAAEvB,SAAA,EACzBD,EAAAA,EAAAA,KAACS,EAAAA,GAAI,CAACE,MAAI,EAACE,GAAI,GAAIY,GAAI,EAAExB,UACvBD,EAAAA,EAAAA,KAAC0B,EAAAA,EAAS,CACRC,WAAS,EACTC,KAAK,QACLC,KAAK,OACLC,KAAK,gBACLC,MAAM,uBACNzB,QAAQ,WACR0B,OAAQV,EACRW,MAAOxC,EAAOhD,cACdyF,SAAUb,EACVc,WAAYf,EAAQ3E,eAAiB0E,EAAO1E,cAC5C2F,MAAOC,QAAQlB,EAAO1E,eAAiB2E,EAAQ3E,eAC/C8D,GAAI,CAAE+B,GAAI,QAGdtC,EAAAA,EAAAA,KAACS,EAAAA,GAAI,CAACE,MAAI,EAACE,GAAI,GAAIY,GAAI,EAAExB,UACvBD,EAAAA,EAAAA,KAAC0B,EAAAA,EAAS,CACRC,WAAS,EACTC,KAAK,QACLE,KAAK,YACLD,KAAK,OACLE,MAAM,uCACNzB,QAAQ,WACR0B,OAAQV,EACRW,MAAOxC,EAAO/C,UACdwF,SAAUb,EACVc,WAAYf,EAAQ1E,WAAayE,EAAOzE,UACxC0F,MAAOC,QAAQlB,EAAOzE,WAAa0E,EAAQ1E,WAC3C6D,GAAI,CAAE+B,GAAI,WAIhBpC,EAAAA,EAAAA,MAACO,EAAAA,GAAI,CAACC,WAAS,EAACc,QAAS,EAAEvB,SAAA,EACzBD,EAAAA,EAAAA,KAACS,EAAAA,GAAI,CAACE,MAAI,EAACE,GAAI,GAAIY,GAAI,EAAExB,UACvBD,EAAAA,EAAAA,KAAC0B,EAAAA,EAAS,CACRC,WAAS,EACTC,KAAK,QACLC,KAAK,OACLC,KAAK,aACLC,MAAM,uCACNzB,QAAQ,WACR0B,OAAQV,EACRW,MAAOxC,EAAO9C,WACduF,SAAUb,EACVc,WAAYf,EAAQzE,YAAcwE,EAAOxE,WACzCyF,MAAOC,QAAQlB,EAAOxE,YAAcyE,EAAQzE,YAC5C4D,GAAI,CAAE+B,GAAI,QAGdtC,EAAAA,EAAAA,KAACS,EAAAA,GAAI,CAACE,MAAI,EAACE,GAAI,GAAIY,GAAI,EAAExB,UACvBD,EAAAA,EAAAA,KAAC0B,EAAAA,EAAS,CACRC,WAAS,EACTC,KAAK,QACLE,KAAK,qBACLD,KAAK,OACLE,MAAM,gDACNzB,QAAQ,WACR0B,OAAQV,EACRW,MAAOxC,EAAO7C,mBACdsF,SAAUb,EACVc,WAAYf,EAAQxE,oBAAsBuE,EAAOvE,mBACjDwF,MAAOC,QAAQlB,EAAOvE,oBAAsBwE,EAAQxE,oBACpD2D,GAAI,CAAE+B,GAAI,WAIhBtC,EAAAA,EAAAA,KAACS,EAAAA,GAAI,CAACC,WAAS,EAACc,QAAS,EAAEvB,UACzBD,EAAAA,EAAAA,KAACS,EAAAA,GAAI,CAACE,MAAI,EAACE,GAAI,GAAIY,GAAI,EAAExB,UACvBD,EAAAA,EAAAA,KAAC0B,EAAAA,EAAS,CACRC,WAAS,EACTC,KAAK,QACLC,KAAK,OACLC,KAAK,WACLC,MAAM,iBACNzB,QAAQ,WACR0B,OAAQV,EACRW,MAAOxC,EAAO5C,SACdqF,SAAUb,EACVc,WAAYf,EAAQvE,UAAYsE,EAAOtE,SACvCuF,MAAOC,QAAQlB,EAAOtE,UAAYuE,EAAQvE,UAC1C0D,GAAI,CAAE+B,GAAI,UAIhBtC,EAAAA,EAAAA,KAACuC,EAAAA,EAAa,CACZV,KAAK,SACLW,MAAM,UACN9D,QAASA,EACT4B,QAAQ,YACRC,GAAI,CAAE+B,GAAI,EAAGG,GAAI,GAAIxC,SACtB,qBAGI,cASzB,C","sources":["app/views/sessions/AddPatientInformation.jsx"],"sourcesContent":["import { useTheme } from '@emotion/react';\nimport { LoadingButton } from '@mui/lab';\nimport { Box, Card, Grid, TextField, Typography } from '@mui/material';\nimport { styled } from '@mui/system';\nimport axios from 'axios.js';\nimport url from 'connectionString';\nimport { Formik } from 'formik';\nimport { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport * as Yup from 'yup';\n\nconst FlexBox = styled(Box)(() => ({ display: 'flex', alignItems: 'center' }));\n\nconst JustifyBox = styled(FlexBox)(() => ({ justifyContent: 'center' }));\n\n// const ContentBox = styled(JustifyBox)(() => ({\n//   height: '100%',\n//   padding: '32px',\n//   background: 'rgba(0, 0, 0, 0.01)',\n// }));\n\nexport const Container = styled(JustifyBox)(() => ({\n  width: '90vw',\n  '& .card': {\n    width: '80vw',\n    margin: '1rem',\n    borderRadius: 12,\n  },\n  borderColor: '#1A2038',\n}));\n\nconst validationSchema = Yup.object().shape({\n  phoneNumber: Yup.string().required('please add phone number'),\n  age: Yup.number().required('please add age'),\n  height: Yup.number().required('please add height in meters'),\n  weight: Yup.number().required('please add weight in meters'),\n  religiousBelieve: Yup.string().nullable('please add religious believes'),\n  foodPreference: Yup.string().nullable('please add preferred food'),\n  culturalFoods: Yup.string().nullable('please add foods culturally recommended'),\n  lifeStyle: Yup.string().nullable('please tell us about your life style'),\n  occupation: Yup.string().nullable('please tell what do you do.'),\n  physicalActivities: Yup.string().nullable('please tell us if you do any physical activities'),\n  location: Yup.string().nullable('please tell us your physical address/location'),\n});\n\nconst registerDoc = async (data) => {\n  const user = await axios.post(`${url.url}/patient/add-patient-details`, data);\n\n  return user;\n};\n\nconst AddPatientInformation = () => {\n  const theme = useTheme();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [details, setDetails] = useState({\n    phoneNumber: '',\n    age: '',\n    height: '',\n    weight: '',\n    religiousBelieve: '',\n    foodPreference: '',\n    culturalFoods: '',\n    lifeStyle: '',\n    occupation: '',\n    physicalActivities: '',\n    location: '',\n  });\n\n  const fetchDetails = async () => {\n    const {\n      data: { data },\n    } = await axios.get(`${url.url}/patient/details`);\n\n    if (data) setDetails(data);\n  };\n\n  useEffect(() => {\n    fetchDetails();\n  }, []);\n\n  const handleFormSubmit = async (values) => {\n    setLoading(true);\n\n    try {\n      await registerDoc(values);\n      navigate('/dashboard/view-my-requests');\n      setLoading(false);\n    } catch (e) {\n      console.log(e);\n      setLoading(false);\n    }\n  };\n\n  const {\n    phoneNumber,\n    age,\n    height,\n    weight,\n    religiousBelieve,\n    foodPreference,\n    culturalFoods,\n    lifeStyle,\n    occupation,\n    physicalActivities,\n    location,\n  } = details;\n\n  const initialValues = {\n    phoneNumber: phoneNumber || '',\n    age: age || '',\n    height: height || '',\n    weight: weight || '',\n    religiousBelieve: religiousBelieve || '',\n    foodPreference: foodPreference || '',\n    culturalFoods: culturalFoods || '',\n    lifeStyle: lifeStyle || '',\n    occupation: occupation || '',\n    physicalActivities: physicalActivities || '',\n    location: location || '',\n  };\n\n  return (\n    <Container>\n      <Card className=\"card\">\n        <Typography variant=\"h4\" sx={{ textAlign: 'center' }}>\n          Please give tell us more about you here\n        </Typography>\n        <Grid container>\n          <Grid item sm={12} xs={12}>\n            <Box p={4} height=\"100%\">\n              <Formik\n                enableReinitialize\n                onSubmit={handleFormSubmit}\n                initialValues={initialValues}\n                validationSchema={validationSchema}\n              >\n                {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n                  <form onSubmit={handleSubmit}>\n                    <Grid container spacing={6}>\n                      <Grid item xs={12} lg={6}>\n                        <TextField\n                          fullWidth\n                          size=\"small\"\n                          type=\"text\"\n                          name=\"phoneNumber\"\n                          label=\"Phone number\"\n                          variant=\"outlined\"\n                          onBlur={handleBlur}\n                          value={values.phoneNumber}\n                          onChange={handleChange}\n                          helperText={touched.phoneNumber && errors.phoneNumber}\n                          error={Boolean(errors.phoneNumber && touched.phoneNumber)}\n                          sx={{ mb: 3 }}\n                        />\n                      </Grid>\n\n                      <Grid item xs={12} lg={6}>\n                        <TextField\n                          fullWidth\n                          size=\"small\"\n                          type=\"number\"\n                          name=\"age\"\n                          label=\"Please add age\"\n                          variant=\"outlined\"\n                          onBlur={handleBlur}\n                          value={values.age}\n                          onChange={handleChange}\n                          helperText={touched.age && errors.age}\n                          error={Boolean(errors.age && touched.age)}\n                          sx={{ mb: 3 }}\n                        />\n                      </Grid>\n                    </Grid>\n                    <Grid container spacing={6}>\n                      <Grid item xs={12} lg={6}>\n                        <TextField\n                          fullWidth\n                          size=\"small\"\n                          type=\"text\"\n                          name=\"height\"\n                          label=\"Enter height in meters\"\n                          variant=\"outlined\"\n                          onBlur={handleBlur}\n                          value={values.height}\n                          onChange={handleChange}\n                          helperText={touched.height && errors.height}\n                          error={Boolean(errors.height && touched.height)}\n                          sx={{ mb: 3 }}\n                        />\n                      </Grid>\n                      <Grid item xs={12} lg={6}>\n                        <TextField\n                          fullWidth\n                          size=\"small\"\n                          name=\"weight\"\n                          type=\"number\"\n                          label=\"Weight in kilograms\"\n                          variant=\"outlined\"\n                          onBlur={handleBlur}\n                          value={values.weight}\n                          onChange={handleChange}\n                          helperText={touched.weight && errors.weight}\n                          error={Boolean(errors.weight && touched.weight)}\n                          sx={{ mb: 2 }}\n                        />\n                      </Grid>\n                    </Grid>\n                    <Grid container spacing={6}>\n                      <Grid item xs={12} lg={6}>\n                        <TextField\n                          fullWidth\n                          size=\"small\"\n                          type=\"text\"\n                          name=\"religiousBelieve\"\n                          label=\"Enter religious believes\"\n                          variant=\"outlined\"\n                          onBlur={handleBlur}\n                          value={values.religiousBelieve}\n                          onChange={handleChange}\n                          helperText={touched.religiousBelieve && errors.religiousBelieve}\n                          error={Boolean(errors.religiousBelieve && touched.religiousBelieve)}\n                          sx={{ mb: 3 }}\n                        />\n                      </Grid>\n\n                      <Grid item xs={12} lg={6}>\n                        <TextField\n                          fullWidth\n                          size=\"small\"\n                          name=\"foodPreference\"\n                          type=\"text\"\n                          label=\"Enter food preferences\"\n                          variant=\"outlined\"\n                          onBlur={handleBlur}\n                          value={values.foodPreference}\n                          onChange={handleChange}\n                          helperText={touched.foodPreference && errors.foodPreference}\n                          error={Boolean(errors.foodPreference && touched.foodPreference)}\n                          sx={{ mb: 2 }}\n                        />\n                      </Grid>\n                    </Grid>\n                    <Grid container spacing={6}>\n                      <Grid item xs={12} lg={6}>\n                        <TextField\n                          fullWidth\n                          size=\"small\"\n                          type=\"text\"\n                          name=\"culturalFoods\"\n                          label=\"Enter cultural foods\"\n                          variant=\"outlined\"\n                          onBlur={handleBlur}\n                          value={values.culturalFoods}\n                          onChange={handleChange}\n                          helperText={touched.culturalFoods && errors.culturalFoods}\n                          error={Boolean(errors.culturalFoods && touched.culturalFoods)}\n                          sx={{ mb: 3 }}\n                        />\n                      </Grid>\n                      <Grid item xs={12} lg={6}>\n                        <TextField\n                          fullWidth\n                          size=\"small\"\n                          name=\"lifeStyle\"\n                          type=\"text\"\n                          label=\"Please tell us about your life style\"\n                          variant=\"outlined\"\n                          onBlur={handleBlur}\n                          value={values.lifeStyle}\n                          onChange={handleChange}\n                          helperText={touched.lifeStyle && errors.lifeStyle}\n                          error={Boolean(errors.lifeStyle && touched.lifeStyle)}\n                          sx={{ mb: 2 }}\n                        />\n                      </Grid>\n                    </Grid>\n                    <Grid container spacing={6}>\n                      <Grid item xs={12} lg={6}>\n                        <TextField\n                          fullWidth\n                          size=\"small\"\n                          type=\"text\"\n                          name=\"occupation\"\n                          label=\"Please tell us about your occupation\"\n                          variant=\"outlined\"\n                          onBlur={handleBlur}\n                          value={values.occupation}\n                          onChange={handleChange}\n                          helperText={touched.occupation && errors.occupation}\n                          error={Boolean(errors.occupation && touched.occupation)}\n                          sx={{ mb: 3 }}\n                        />\n                      </Grid>\n                      <Grid item xs={12} lg={6}>\n                        <TextField\n                          fullWidth\n                          size=\"small\"\n                          name=\"physicalActivities\"\n                          type=\"text\"\n                          label=\"Please tell us about your physical activities\"\n                          variant=\"outlined\"\n                          onBlur={handleBlur}\n                          value={values.physicalActivities}\n                          onChange={handleChange}\n                          helperText={touched.physicalActivities && errors.physicalActivities}\n                          error={Boolean(errors.physicalActivities && touched.physicalActivities)}\n                          sx={{ mb: 2 }}\n                        />\n                      </Grid>\n                    </Grid>\n                    <Grid container spacing={6}>\n                      <Grid item xs={12} lg={6}>\n                        <TextField\n                          fullWidth\n                          size=\"small\"\n                          type=\"text\"\n                          name=\"location\"\n                          label=\"Enter location\"\n                          variant=\"outlined\"\n                          onBlur={handleBlur}\n                          value={values.location}\n                          onChange={handleChange}\n                          helperText={touched.location && errors.location}\n                          error={Boolean(errors.location && touched.location)}\n                          sx={{ mb: 3 }}\n                        />\n                      </Grid>\n                    </Grid>\n                    <LoadingButton\n                      type=\"submit\"\n                      color=\"primary\"\n                      loading={loading}\n                      variant=\"contained\"\n                      sx={{ mb: 2, mt: 3 }}\n                    >\n                      Submit Details\n                    </LoadingButton>\n                  </form>\n                )}\n              </Formik>\n            </Box>\n          </Grid>\n        </Grid>\n      </Card>\n    </Container>\n  );\n};\n\nexport default AddPatientInformation;\n"],"names":["FlexBox","styled","Box","display","alignItems","JustifyBox","justifyContent","Container","width","margin","borderRadius","borderColor","validationSchema","Yup","shape","phoneNumber","required","age","height","weight","religiousBelieve","nullable","foodPreference","culturalFoods","lifeStyle","occupation","physicalActivities","location","registerDoc","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","user","wrap","_context","prev","next","axios","concat","url","sent","abrupt","stop","_x","apply","arguments","useTheme","navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","details","setDetails","fetchDetails","_ref2","_callee2","_yield$axios$get","_context2","useEffect","handleFormSubmit","_ref3","_callee3","values","_context3","t0","console","log","_x2","initialValues","_jsx","children","_jsxs","Card","className","Typography","variant","sx","textAlign","Grid","container","item","sm","xs","p","Formik","enableReinitialize","onSubmit","_ref4","errors","touched","handleChange","handleBlur","handleSubmit","spacing","lg","TextField","fullWidth","size","type","name","label","onBlur","value","onChange","helperText","error","Boolean","mb","LoadingButton","color","mt"],"sourceRoot":""}