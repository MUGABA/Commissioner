{"version":3,"file":"static/js/9926.7ba34260.chunk.js","mappings":"oNAIMA,GAAcC,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,EAAc,SAAAE,GAAQA,EAALC,MAAK,MAAQ,CAChDC,MAAO,EACPC,SAAU,OACVC,SAAU,OACVC,WAAY,SACb,IAEKC,EAAa,SAACC,EAAMC,GACxB,OAAIA,EAAOC,QAAgBD,EAAOC,QAAQF,IACnCG,EAAAA,EAAAA,KAAIH,EAAMC,EAAOG,KAC1B,EA8BA,IA5BoB,SAAHC,GAA2B,IAArBC,EAAOD,EAAPC,QAASC,EAAIF,EAAJE,KAC9B,OACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CAACC,GAAI,CAAEC,QAAS,QAASC,UAAW,OAAQd,WAAY,UAAYe,UAAWrB,EAAAA,EAAMsB,UACvFC,EAAAA,EAAAA,MAACzB,EAAW,CAAAwB,SAAA,EACVN,EAAAA,EAAAA,KAACQ,EAAAA,EAAS,CAAAF,UACRN,EAAAA,EAAAA,KAACS,EAAAA,EAAQ,CAAAH,SACNR,EAAQY,KAAI,SAACjB,EAAQkB,GAAG,OACvBX,EAAAA,EAAAA,KAACY,EAAAA,EAAS,CAACC,GAAIF,EAAKG,MAAM,SAAQR,SAC/Bb,EAAOsB,MACE,SAKlBf,EAAAA,EAAAA,KAACgB,EAAAA,EAAS,CAACd,GAAI,CAAEf,MAAO,QAASmB,SAC9BP,EAAKW,KAAI,SAAClB,EAAMyB,GAAK,OACpBjB,EAAAA,EAAAA,KAACS,EAAAA,EAAQ,CAAAH,SACNR,EAAQY,KAAI,SAACjB,EAAQkB,GAAG,OACvBX,EAAAA,EAAAA,KAACY,EAAAA,EAAS,CAACE,MAAM,SAAQR,SAAEf,EAAWC,EAAMC,IAAoB,KAFrDwB,EAIJ,UAMvB,C,qICHA,UAjCkB,WAChB,IAAAC,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACtBI,GAA8BL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAtCE,EAAOD,EAAA,GAERE,GAFoBF,EAAA,GAEV,eAAAxC,GAAA2C,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAAjC,EAAA,OAAA8B,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAGPC,EAAAA,EAAAA,IAAU,GAADC,OAAIC,EAAAA,EAAAA,IAAO,gBAAe,KAAD,EAAAP,EAAAE,EAAAM,KADlCzC,EAAIiC,EAAZjC,KAAQA,KAGVwB,EAASxB,GAAM,wBAAAmC,EAAAO,OAAA,GAAAV,EAAA,KAChB,kBANe,OAAA9C,EAAAyD,MAAA,KAAAC,UAAA,MAmBhB,OAJAC,EAAAA,EAAAA,YAAU,WACRjB,GACF,GAAG,CAACD,KAGFnB,EAAAA,EAAAA,MAAAsC,EAAAA,SAAA,CAAAvC,SAAA,EACEN,EAAAA,EAAAA,KAAC8C,EAAAA,EAAU,CAACC,QAAQ,KAAK7C,GAAI,CAAE8C,UAAW,UAAW1C,SAAC,mBAGtDN,EAAAA,EAAAA,KAACiD,EAAAA,EAAW,CAACnD,QAhBD,CACd,CAAEF,KAAM,WAAYmB,KAAM,aAC1B,CAAEnB,KAAM,QAASmB,KAAM,SACvB,CAAEnB,KAAM,WAAYmB,KAAM,aAC1B,CAAEnB,KAAM,mBAAoBmB,KAAM,oBAYDhB,KAAMuB,IAAS,MAGpD,C","sources":["app/views/material-kit/tables/ReUsableTable.jsx","app/views/sessions/ViewUsers.jsx"],"sourcesContent":["import { Box, styled, Table, TableBody, TableCell, TableHead, TableRow } from '@mui/material';\n\nimport { get } from 'lodash';\n\nconst StyledTable = styled(Table)(({ theme }) => ({\n  width: 0,\n  minWidth: '100%',\n  overflow: 'auto',\n  whiteSpace: 'nowrap',\n}));\n\nconst renderCell = (item, column) => {\n  if (column.content) return column.content(item);\n  return get(item, column.path);\n};\n\nconst CustomTable = ({ columns, data }) => {\n  return (\n    <Box sx={{ display: 'block', overflowY: 'auto', whiteSpace: 'nowrap' }} component={Table}>\n      <StyledTable>\n        <TableHead>\n          <TableRow>\n            {columns.map((column, idx) => (\n              <TableCell id={idx} align=\"center\">\n                {column.name}\n              </TableCell>\n            ))}\n          </TableRow>\n        </TableHead>\n\n        <TableBody sx={{ width: '100%' }}>\n          {data.map((item, index) => (\n            <TableRow key={index}>\n              {columns.map((column, idx) => (\n                <TableCell align=\"center\">{renderCell(item, column)}</TableCell>\n              ))}\n            </TableRow>\n          ))}\n        </TableBody>\n      </StyledTable>\n    </Box>\n  );\n};\n\nexport default CustomTable;\n","import { Typography } from '@mui/material';\nimport axios from 'axios.js';\nimport url from 'connectionString';\nimport { useEffect, useState } from 'react';\nimport CustomTable from '../material-kit/tables/ReUsableTable';\n\nconst ViewUsers = () => {\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const fetchUsers = async () => {\n    const {\n      data: { data },\n    } = await axios.get(`${url.url}/auth/users`);\n\n    setUsers(data);\n  };\n\n  const columns = [\n    { path: 'fullName', name: 'Full Name' },\n    { path: 'email', name: 'Email' },\n    { path: 'userSide', name: 'User type' },\n    { path: 'levelOfEducation', name: 'Education Level' },\n  ];\n\n  useEffect(() => {\n    fetchUsers();\n  }, [loading]);\n\n  return (\n    <>\n      <Typography variant=\"h4\" sx={{ textAlign: 'center' }}>\n        List of users\n      </Typography>\n      <CustomTable columns={columns} data={users} />;\n    </>\n  );\n};\n\nexport default ViewUsers;\n"],"names":["StyledTable","styled","Table","_ref","theme","width","minWidth","overflow","whiteSpace","renderCell","item","column","content","get","path","_ref2","columns","data","_jsx","Box","sx","display","overflowY","component","children","_jsxs","TableHead","TableRow","map","idx","TableCell","id","align","name","TableBody","index","_useState","useState","_useState2","_slicedToArray","users","setUsers","_useState3","_useState4","loading","fetchUsers","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$axios$get","wrap","_context","prev","next","axios","concat","url","sent","stop","apply","arguments","useEffect","_Fragment","Typography","variant","textAlign","CustomTable"],"sourceRoot":""}