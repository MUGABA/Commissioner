{"version":3,"file":"static/js/1538.6d0bf460.chunk.js","mappings":"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","sources":["app/views/material-kit/snackbar/ConsecutiveSnackbar.jsx","app/views/material-kit/snackbar/CustomizedSnackbar.jsx","app/views/material-kit/snackbar/DirectionSnackbar.jsx","app/views/material-kit/snackbar/LongLengthSnackbar.jsx","app/views/material-kit/snackbar/PositionedSnackbar.jsx","app/views/material-kit/snackbar/SimpleSnackbar.jsx","app/views/material-kit/snackbar/StackedSnackbar.jsx","app/views/material-kit/snackbar/TransitionSnackbar.jsx","app/views/material-kit/snackbar/AppSnackbar.jsx"],"sourcesContent":["import CloseIcon from \"@mui/icons-material/Close\";\nimport { Box, Button, IconButton, Snackbar } from \"@mui/material\";\nimport { styled } from \"@mui/system\";\nimport { useState } from \"react\";\n\nconst StyledIconButton = styled(IconButton)(({ theme }) => ({\n  padding: theme.spacing(0.5),\n}));\n\nconst ConsecutiveSnackbars = () => {\n  const [queue, setQueue] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [messageInfo, setMessageInfo] = useState({});\n\n  const handleClick = (message) => () => {\n    setQueue((state) => [...state, { message, key: new Date().getTime() }]);\n\n    if (open) {\n      // immediately begin dismissing current message\n      // to start showing new one\n      setOpen(false);\n    } else {\n      processQueue();\n    }\n  };\n\n  const processQueue = () => {\n    if (queue.length > 0) {\n      setMessageInfo(queue.shift());\n      setOpen(true);\n    }\n  };\n\n  const handleClose = (_, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpen(false);\n  };\n\n  const handleExited = () => processQueue();\n\n  return (\n    <Box>\n      <Button onClick={handleClick(\"Message A\")}>Show message A</Button>\n      <Button onClick={handleClick(\"Message B\")}>Show message B</Button>\n      <Snackbar\n        open={open}\n        key={messageInfo.key}\n        onClose={handleClose}\n        autoHideDuration={6000}\n        onExited={handleExited}\n        ContentProps={{ \"aria-describedby\": \"message-id\" }}\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"left\" }}\n        message={<span id=\"message-id\">{messageInfo.message}</span>}\n        action={[\n          <Button key=\"undo\" color=\"secondary\" size=\"small\" onClick={handleClose}>\n            UNDO\n          </Button>,\n          <StyledIconButton key=\"close\" color=\"inherit\" aria-label=\"Close\" onClick={handleClose}>\n            <CloseIcon />\n          </StyledIconButton>,\n        ]}\n      />\n    </Box>\n  );\n};\n\nexport default ConsecutiveSnackbars;\n","import { Alert, Button, Snackbar } from \"@mui/material\";\nimport { amber, green } from \"@mui/material/colors\";\nimport { styled } from \"@mui/system\";\nimport React from \"react\";\n\nconst ContentRoot = styled(\"div\")(({ theme }) => ({\n  \"& .icon\": { fontSize: 20 },\n  \"& .success\": { backgroundColor: green[600] },\n  \"& .warning\": { backgroundColor: amber[700] },\n  \"& .error\": { backgroundColor: theme.palette.error.main },\n  \"& .info\": { backgroundColor: theme.palette.primary.main },\n  \"& .iconVariant\": { opacity: 0.9, marginRight: theme.spacing(1) },\n  \"& .message\": { display: \"flex\", alignItems: \"center\" },\n  \"& .margin\": { margin: theme.spacing(1) },\n}));\n\nexport default function CustomizedSnackbars() {\n  const [open, setOpen] = React.useState(false);\n\n  function handleClick() {\n    setOpen(true);\n  }\n  function handleClose(_, reason) {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpen(false);\n  }\n\n  return (\n    <ContentRoot>\n      <Button variant=\"outlined\" className=\"margin\" onClick={handleClick}>\n        Open success snackbar\n      </Button>\n\n      <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"success\" sx={{ width: \"100%\" }} variant=\"filled\">\n          This is a success message!\n        </Alert>\n      </Snackbar>\n\n      <Alert onClose={handleClose} sx={{ m: 1 }} severity=\"error\" variant=\"filled\">\n        This is an error message!\n      </Alert>\n\n      <Alert onClose={handleClose} sx={{ m: 1 }} severity=\"warning\" variant=\"filled\">\n        This is a warning message!\n      </Alert>\n\n      <Alert onClose={handleClose} sx={{ m: 1 }} severity=\"info\" variant=\"filled\">\n        This is an information message!\n      </Alert>\n\n      <Alert onClose={handleClose} sx={{ m: 1 }} severity=\"success\" variant=\"filled\">\n        This is a success message!\n      </Alert>\n    </ContentRoot>\n  );\n}\n","import { Box, Button, Slide, Snackbar } from \"@mui/material\";\nimport { useState } from \"react\";\n\nfunction TransitionLeft(props) {\n  return <Slide {...props} direction=\"left\" />;\n}\n\nfunction TransitionUp(props) {\n  return <Slide {...props} direction=\"up\" />;\n}\n\nfunction TransitionRight(props) {\n  return <Slide {...props} direction=\"right\" />;\n}\n\nfunction TransitionDown(props) {\n  return <Slide {...props} direction=\"down\" />;\n}\n\nconst DirectionSnackbar = () => {\n  const [open, setOpen] = useState(false);\n  const [TransitionType, setTransitionType] = useState(undefined);\n\n  const handleClick = (slideDirection) => () => {\n    setOpen(true);\n    setTransitionType(() => slideDirection);\n  };\n\n  const handleClose = () => setOpen(false);\n\n  return (\n    <Box>\n      <Button onClick={handleClick(TransitionLeft)}>Right</Button>\n      <Button onClick={handleClick(TransitionUp)}>Up</Button>\n      <Button onClick={handleClick(TransitionRight)}>Left</Button>\n      <Button onClick={handleClick(TransitionDown)}>Down</Button>\n\n      <Snackbar\n        open={open}\n        onClose={handleClose}\n        TransitionComponent={TransitionType}\n        ContentProps={{ \"aria-describedby\": \"message-id\" }}\n        message={<span id=\"message-id\">I love snacks</span>}\n      />\n    </Box>\n  );\n};\n\nexport default DirectionSnackbar;\n","import { Button, SnackbarContent, styled } from \"@mui/material\";\n\nconst action = (\n  <Button color=\"secondary\" size=\"small\">\n    lorem ipsum dolorem\n  </Button>\n);\n\nconst SnackbarRoot = styled(\"div\")(({ theme }) => ({\n  maxWidth: 600,\n  \"& .snackbar\": { margin: theme.spacing(1) },\n}));\n\nexport default function LongTextSnackbar() {\n  return (\n    <SnackbarRoot>\n      <SnackbarContent className=\"snackbar\" message=\"I love snacks.\" action={action} />\n\n      <SnackbarContent\n        className=\"snackbar\"\n        message={`I love candy. I love cookies. I love cupcakes. \\\n          I love cheesecake. I love chocolate.`}\n      />\n\n      <SnackbarContent\n        className=\"snackbar\"\n        message=\"I love candy. I love cookies. I love cupcakes.\"\n        action={action}\n      />\n\n      <SnackbarContent\n        className=\"snackbar\"\n        message={\n          \"I love candy. I love cookies. I love cupcakes. \\\n          I love cheesecake. I love chocolate.\"\n        }\n        action={action}\n      />\n    </SnackbarRoot>\n  );\n}\n","import { Box, Button, Snackbar } from \"@mui/material\";\nimport React from \"react\";\n\nexport default function PositionedSnackbar() {\n  const [state, setState] = React.useState({\n    open: false,\n    vertical: \"top\",\n    horizontal: \"center\",\n  });\n\n  const { vertical, horizontal, open } = state;\n\n  const handleClick = (newState) => () => {\n    setState({ open: true, ...newState });\n  };\n\n  function handleClose() {\n    setState({ ...state, open: false });\n  }\n\n  return (\n    <Box>\n      <Button onClick={handleClick({ vertical: \"top\", horizontal: \"center\" })}>Top-Center</Button>\n      <Button onClick={handleClick({ vertical: \"top\", horizontal: \"right\" })}>Top-Right</Button>\n\n      <Button onClick={handleClick({ vertical: \"bottom\", horizontal: \"right\" })}>\n        Bottom-Right\n      </Button>\n\n      <Button onClick={handleClick({ vertical: \"bottom\", horizontal: \"center\" })}>\n        Bottom-Center\n      </Button>\n\n      <Button onClick={handleClick({ vertical: \"bottom\", horizontal: \"left\" })}>Bottom-Left</Button>\n\n      <Button onClick={handleClick({ vertical: \"top\", horizontal: \"left\" })}>Top-Left</Button>\n\n      <Snackbar\n        open={open}\n        onClose={handleClose}\n        key={`${vertical},${horizontal}`}\n        anchorOrigin={{ vertical, horizontal }}\n        ContentProps={{ \"aria-describedby\": \"message-id\" }}\n        message={<span id=\"message-id\">I love snacks</span>}\n      />\n    </Box>\n  );\n}\n","import CloseIcon from \"@mui/icons-material/Close\";\nimport { Box, Button, IconButton, Snackbar, useTheme } from \"@mui/material\";\nimport { useState } from \"react\";\n\nexport default function SimpleSnackbar() {\n  const theme = useTheme();\n  const [open, setOpen] = useState(false);\n\n  function handleClick() {\n    setOpen(true);\n  }\n\n  function handleClose(_, reason) {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpen(false);\n  }\n\n  return (\n    <Box>\n      <Button onClick={handleClick}>Open simple snackbar</Button>\n      <Snackbar\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"left\" }}\n        open={open}\n        autoHideDuration={6000}\n        onClose={handleClose}\n        ContentProps={{ \"aria-describedby\": \"message-id\" }}\n        message={<span id=\"message-id\">Note archived</span>}\n        action={[\n          <Button key=\"undo\" color=\"secondary\" size=\"small\" onClick={handleClose}>\n            UNDO\n          </Button>,\n          <IconButton\n            key=\"close\"\n            aria-label=\"Close\"\n            color=\"inherit\"\n            onClick={handleClose}\n            sx={{ padding: theme.spacing(0.5) }}\n          >\n            <CloseIcon />\n          </IconButton>,\n        ]}\n      />\n    </Box>\n  );\n}\n","import { Button } from \"@mui/material\";\nimport { SnackbarProvider, useSnackbar } from \"notistack\";\nimport React from \"react\";\n\nfunction StackedSnackbar() {\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleClick = () => enqueueSnackbar(\"I love snacks.\");\n\n  const handleClickVariant = (variant) => () => {\n    // variant could be success, error, warning, info, or default\n    enqueueSnackbar(\"This is a warning message!\", { variant });\n  };\n\n  return (\n    <React.Fragment>\n      <Button onClick={handleClick}>Show snackbar</Button>\n      <Button onClick={handleClickVariant(\"warning\")}>Show warning snackbar</Button>\n    </React.Fragment>\n  );\n}\n\nexport default function IntegrationNotistack() {\n  return (\n    <SnackbarProvider maxSnack={3}>\n      <StackedSnackbar />\n    </SnackbarProvider>\n  );\n}\n","import { Button, Fade, Grow, Slide, Snackbar } from \"@mui/material\";\nimport React from \"react\";\n\nfunction SlideTransition(props) {\n  return <Slide {...props} direction=\"up\" />;\n}\n\nfunction GrowTransition(props) {\n  return <Grow {...props} />;\n}\n\nexport default function TransitionsSnackbar() {\n  const [state, setState] = React.useState({\n    open: false,\n    Transition: Fade,\n  });\n\n  const handleClick = (Transition) => () => {\n    setState({ open: true, Transition });\n  };\n\n  function handleClose() {\n    setState({ ...state, open: false });\n  }\n\n  return (\n    <div>\n      <Button onClick={handleClick(GrowTransition)}>Grow Transition</Button>\n      <Button onClick={handleClick(Fade)}>Fade Transition</Button>\n      <Button onClick={handleClick(SlideTransition)}>Slide Transition</Button>\n      <Snackbar\n        open={state.open}\n        onClose={handleClose}\n        TransitionComponent={state.Transition}\n        ContentProps={{ \"aria-describedby\": \"message-id\" }}\n        message={<span id=\"message-id\">I love snacks</span>}\n      />\n    </div>\n  );\n}\n","import { Box, Stack, styled } from \"@mui/material\";\nimport { Breadcrumb, SimpleCard } from \"app/components\";\nimport ConsecutiveSnackbar from \"./ConsecutiveSnackbar\";\nimport CustomizedSnackbars from \"./CustomizedSnackbar\";\nimport DirectionSnackbar from \"./DirectionSnackbar\";\nimport LongTextSnackbar from \"./LongLengthSnackbar\";\nimport PositionedSnackbar from \"./PositionedSnackbar\";\nimport SimpleSnackbar from \"./SimpleSnackbar\";\nimport IntegrationNotistack from \"./StackedSnackbar\";\nimport TransitionsSnackbar from \"./TransitionSnackbar\";\n\nconst Container = styled(\"div\")(({ theme }) => ({\n  margin: \"30px\",\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\n  \"& .breadcrumb\": {\n    marginBottom: \"30px\",\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\n  },\n}));\n\nconst AppSnackbar = () => {\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: \"Material\", path: \"/material\" }, { name: \"Snackbar\" }]}\n        />\n      </Box>\n\n      <Stack spacing={3}>\n        <SimpleCard title=\"simple snackbar\">\n          <SimpleSnackbar />\n        </SimpleCard>\n\n        <SimpleCard title=\"customized snackbar\">\n          <CustomizedSnackbars />\n        </SimpleCard>\n\n        <SimpleCard title=\"positioned snackbar\">\n          <PositionedSnackbar />\n        </SimpleCard>\n\n        <SimpleCard title=\"message length\">\n          <LongTextSnackbar />\n        </SimpleCard>\n\n        <SimpleCard title=\"transition\">\n          <TransitionsSnackbar />\n        </SimpleCard>\n\n        <SimpleCard title=\"consecutive snackbar\">\n          <ConsecutiveSnackbar />\n        </SimpleCard>\n\n        <SimpleCard title=\"Control Slide direction\">\n          <DirectionSnackbar />\n        </SimpleCard>\n\n        <SimpleCard title=\"complementary project\">\n          <IntegrationNotistack />\n        </SimpleCard>\n      </Stack>\n    </Container>\n  );\n};\n\nexport default AppSnackbar;\n"],"names":["StyledIconButton","styled","IconButton","_ref","padding","theme","spacing","_useState","useState","_useState2","_slicedToArray","queue","setQueue","_useState3","_useState4","open","setOpen","_useState5","_useState6","messageInfo","setMessageInfo","handleClick","message","state","concat","_toConsumableArray","key","Date","getTime","processQueue","length","shift","handleClose","_","reason","_jsxs","Box","children","_jsx","Button","onClick","Snackbar","onClose","autoHideDuration","onExited","ContentProps","anchorOrigin","vertical","horizontal","id","action","color","size","CloseIcon","ContentRoot","fontSize","backgroundColor","green","amber","palette","error","main","primary","opacity","marginRight","display","alignItems","margin","CustomizedSnackbars","_React$useState","React","_React$useState2","variant","className","Alert","severity","sx","width","m","TransitionLeft","props","Slide","_objectSpread","direction","TransitionUp","TransitionRight","TransitionDown","undefined","TransitionType","setTransitionType","slideDirection","TransitionComponent","SnackbarRoot","maxWidth","LongTextSnackbar","SnackbarContent","PositionedSnackbar","setState","newState","SimpleSnackbar","useTheme","StackedSnackbar","enqueueSnackbar","useSnackbar","IntegrationNotistack","SnackbarProvider","maxSnack","SlideTransition","GrowTransition","Grow","TransitionsSnackbar","Transition","Fade","Container","_ref2","_defineProperty","breakpoints","down","marginBottom","Breadcrumb","routeSegments","name","path","Stack","SimpleCard","title","ConsecutiveSnackbar","DirectionSnackbar"],"sourceRoot":""}