{"version":3,"file":"static/js/291.ae59746a.chunk.js","mappings":"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","sources":["app/views/sessions/styles.js","app/views/sessions/MultSelect.jsx","app/views/sessions/AddDietRequest.jsx"],"sourcesContent":["import { makeStyles } from '@mui/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    width: '100%',\n  },\n  indeterminateColor: {\n    color: '#f50057',\n  },\n  selectAllText: {\n    fontWeight: 500,\n  },\n  selectedAll: {\n    backgroundColor: 'rgba(0, 0, 0, 0.08)',\n    '&:hover': {\n      backgroundColor: 'rgba(0, 0, 0, 0.08)',\n    },\n  },\n}));\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n  getContentAnchorEl: null,\n  anchorOrigin: {\n    vertical: 'bottom',\n    horizontal: 'center',\n  },\n  transformOrigin: {\n    vertical: 'top',\n    horizontal: 'center',\n  },\n  variant: 'menu',\n};\n\nconst options = [\n  'Oliver Hansen',\n  'Van Henry',\n  'April Tucker',\n  'Ralph Hubbard',\n  'Omar Alexander',\n  'Carlos Abbott',\n  'Miriam Wagner',\n  'Bradley Wilkerson',\n  'Virginia Andrews',\n  'Kelly Snyder',\n];\n\nexport { useStyles, MenuProps, options };\n","import {\n  Checkbox,\n  FormControl,\n  FormGroup,\n  FormLabel,\n  ListItemIcon,\n  ListItemText,\n  MenuItem,\n  Select,\n} from '@mui/material';\n\nimport { useState } from 'react';\n\nimport { MenuProps, options, useStyles } from './styles';\n\nconst MultiSelect = ({ list, displayName, setAttributes, label, selectedFood }) => {\n  const classes = useStyles();\n  const [selected, setSelected] = useState(selectedFood);\n\n  const handleChange = (event) => {\n    const value = event.target.value;\n    if (value[value.length - 1] === 'all') {\n      setSelected(selected.length === options.length ? [] : options);\n      return;\n    }\n\n    setSelected(value);\n    setAttributes(value);\n  };\n\n  return (\n    <FormGroup>\n      <FormLabel>{label}</FormLabel>\n      <FormControl className={classes.formControl}>\n        <Select\n          size=\"small\"\n          labelId=\"mutiple-select-label\"\n          multiple\n          value={selected}\n          onChange={handleChange}\n          renderValue={() => selected.map((item) => `${item[displayName]},`)}\n          MenuProps={MenuProps}\n        >\n          {list.map((option, id) => (\n            <MenuItem key={id} value={option} style={{ display: 'flex' }}>\n              <ListItemIcon>\n                <Checkbox checked={selected.indexOf(option) > -1} />\n              </ListItemIcon>\n              <ListItemText primary={option[displayName]} />\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </FormGroup>\n  );\n};\n\nexport default MultiSelect;\n","import { useTheme } from '@emotion/react';\nimport { LoadingButton } from '@mui/lab';\nimport {\n  Box,\n  Card,\n  FormControl,\n  FormControlLabel,\n  FormLabel,\n  Grid,\n  TextField,\n  Typography,\n} from '@mui/material';\n\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport { styled } from '@mui/system';\nimport axios from 'axios.js';\nimport url from 'connectionString';\nimport { Formik } from 'formik';\nimport { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport MultiSelect from './MultSelect';\n\nconst FlexBox = styled(Box)(() => ({ display: 'flex', alignItems: 'center' }));\n\nconst JustifyBox = styled(FlexBox)(() => ({ justifyContent: 'center' }));\n\nexport const Container = styled(JustifyBox)(() => ({\n  width: '90vw',\n  '& .card': {\n    width: '80vw',\n    margin: '1rem',\n    borderRadius: 12,\n  },\n  borderColor: '#1A2038',\n}));\n\nconst registerDoc = async (data) => {\n  const user = await axios.post(`${url.url}/cares/make-request`, data);\n\n  return user;\n};\n\nconst AskDietHelp = () => {\n  const theme = useTheme();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [allergies, setAllergies] = useState([]);\n  const [foods, setFoods] = useState([]);\n  const [selectedFoods, setSelectedFoods] = useState([]);\n  const [request, setRequest] = useState({\n    anyAllergies: '',\n    beenDiagnosed: '',\n    diagnosedDisease: '',\n    recommendedBy: '',\n  });\n  const [suggestedFoods, setSuggestedFoods] = useState([]);\n  const { requestId } = useParams();\n\n  const fetchFoods = async () => {\n    const {\n      data: { data },\n    } = await axios.get(`${url.url}/food`);\n\n    setFoods(data);\n  };\n\n  const fetchFoodDetails = async () => {\n    const {\n      data: { data },\n    } = await axios.get(`/cares//get-single/${requestId}`);\n\n    const selectedFoods = data.allergicFoods.split(',').map((item) => {\n      return item.length > 1 ? { name: item } : null;\n    });\n\n    selectedFoods.pop();\n    setSelectedFoods(selectedFoods);\n\n    setRequest(data);\n  };\n\n  const updateData = async (data) => {\n    const user = await axios.put(`${url.url}/cares/food-recommended/${requestId}`, data);\n\n    return user;\n  };\n\n  const sendRequest = async (data) => {\n    if (requestId) await updateData(data);\n    else await registerDoc(data);\n  };\n\n  useEffect(() => {\n    fetchFoodDetails();\n    fetchFoods();\n  }, []);\n\n  const handleFormSubmit = async (values) => {\n    setLoading(true);\n\n    let foodAllergies = '';\n    for (const food of allergies) {\n      foodAllergies += `${food.name},`;\n    }\n\n    let recommendedFoods = '';\n    for (const food of allergies) {\n      recommendedFoods += `${food.name},`;\n    }\n\n    const obj = {\n      allergicFoods: foodAllergies,\n      recommendedFoods,\n      ...values,\n    };\n    try {\n      await sendRequest(obj);\n      navigate('/dashboard/view-patient-requests');\n      setLoading(false);\n    } catch (e) {\n      setLoading(false);\n    }\n  };\n\n  const validationSchema = Yup.object().shape({\n    anyAllergies: Yup.string().required('Select one'),\n    beenDiagnosed: Yup.string().required('Select one'),\n    diagnosedDisease: Yup.string().nullable(),\n    description: Yup.string().nullable(),\n  });\n\n  const { anyAllergies, beenDiagnosed, diagnosedDisease } = request;\n\n  return (\n    <Container>\n      <Card className=\"card\">\n        <Typography variant=\"h4\" sx={{ textAlign: 'center' }}>\n          Send Nutrition request\n        </Typography>\n        <Grid container>\n          <Grid item sm={12} xs={12}>\n            <Box p={4} height=\"100%\">\n              <Formik\n                enableReinitialize\n                onSubmit={handleFormSubmit}\n                initialValues={{\n                  anyAllergies: anyAllergies || 'No',\n                  beenDiagnosed: beenDiagnosed || 'No',\n                  diagnosedDisease: diagnosedDisease || '',\n                  description: '',\n                }}\n                validationSchema={validationSchema}\n              >\n                {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n                  <form onSubmit={handleSubmit}>\n                    <Grid container spacing={6}>\n                      <Grid item xs={12} lg={6}>\n                        <FormControl sx={{ margin: '1rem 0rem' }}>\n                          <FormLabel id=\"demo-radio-buttons-group-label\">\n                            Do you have any allergies\n                          </FormLabel>\n                          <RadioGroup\n                            aria-labelledby=\"demo-radio-buttons-group-label\"\n                            defaultValue=\"No\"\n                            name=\"anyAllergies\"\n                            value={values.anyAllergies}\n                            onChange={handleChange}\n                            sx={{ display: 'flex', flexDirection: 'row' }}\n                          >\n                            <FormControlLabel value=\"No\" control={<Radio />} label=\"NO\" />\n                            <FormControlLabel value=\"Yes\" control={<Radio />} label=\"YES\" />\n                          </RadioGroup>\n                        </FormControl>\n                      </Grid>\n\n                      <Grid item xs={12} lg={6}>\n                        <FormControl sx={{ margin: '1rem 0rem' }}>\n                          <FormLabel id=\"demo-radio-buttons-group-label\">\n                            Have you been diagnosed recently?\n                          </FormLabel>\n                          <RadioGroup\n                            aria-labelledby=\"demo-radio-buttons-group-label\"\n                            defaultValue=\"No\"\n                            name=\"beenDiagnosed\"\n                            value={values.beenDiagnosed}\n                            onChange={handleChange}\n                            sx={{ display: 'flex', flexDirection: 'row' }}\n                          >\n                            <FormControlLabel value=\"No\" control={<Radio />} label=\"NO\" />\n                            <FormControlLabel value=\"Yes\" control={<Radio />} label=\"YES\" />\n                          </RadioGroup>\n                        </FormControl>\n                      </Grid>\n                    </Grid>\n\n                    <Grid container spacing={6}>\n                      <Grid item xs={12} lg={6}>\n                        {values.anyAllergies === 'Yes' ? (\n                          <MultiSelect\n                            list={foods}\n                            displayName=\"name\"\n                            setAttributes={setAllergies}\n                            selectedFood={selectedFoods}\n                            label=\"PLease select allergic foods\"\n                          />\n                        ) : (\n                          ''\n                        )}\n                      </Grid>\n                      <Grid item xs={12} lg={6}>\n                        {values.beenDiagnosed === 'Yes' ? (\n                          <TextField\n                            fullWidth\n                            size=\"small\"\n                            name=\"diagnosedDisease\"\n                            type=\"text\"\n                            label=\"Please enter diagnosed diseases here.\"\n                            variant=\"outlined\"\n                            onBlur={handleBlur}\n                            value={values.diagnosedDisease}\n                            onChange={handleChange}\n                            helperText={touched.diagnosedDisease && errors.diagnosedDisease}\n                            error={Boolean(errors.diagnosedDisease && touched.diagnosedDisease)}\n                            sx={{ mb: 2 }}\n                          />\n                        ) : (\n                          ''\n                        )}\n                      </Grid>\n                    </Grid>\n\n                    {requestId ? (\n                      <Grid container spacing={6}>\n                        <Grid item xs={12} lg={6}>\n                          <MultiSelect\n                            list={foods}\n                            displayName=\"name\"\n                            setAttributes={setSuggestedFoods}\n                            selectedFood={[]}\n                            label=\"Suggest Foods for this patient\"\n                          />\n                        </Grid>\n                        <Grid item xs={12} lg={6}>\n                          <TextField\n                            fullWidth\n                            size=\"small\"\n                            name=\"description\"\n                            type=\"text\"\n                            label=\"Please enter description.\"\n                            variant=\"outlined\"\n                            onBlur={handleBlur}\n                            value={values.description}\n                            onChange={handleChange}\n                            helperText={touched.description && errors.description}\n                            error={Boolean(errors.description && touched.description)}\n                            sx={{ mb: 2 }}\n                          />\n                        </Grid>\n                      </Grid>\n                    ) : (\n                      ''\n                    )}\n\n                    <LoadingButton\n                      type=\"submit\"\n                      color=\"primary\"\n                      loading={loading}\n                      variant=\"contained\"\n                      sx={{ mb: 2, mt: 3 }}\n                    >\n                      {requestId ? 'Give Feed Back' : 'Request Diet Help'}\n                    </LoadingButton>\n                  </form>\n                )}\n              </Formik>\n            </Box>\n          </Grid>\n        </Grid>\n      </Card>\n    </Container>\n  );\n};\n\nexport default AskDietHelp;\n"],"names":["useStyles","makeStyles","theme","formControl","margin","spacing","width","indeterminateColor","color","selectAllText","fontWeight","selectedAll","backgroundColor","MenuProps","PaperProps","style","maxHeight","ITEM_HEIGHT","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","variant","options","_ref","list","displayName","setAttributes","label","selectedFood","classes","_useState","useState","_useState2","_slicedToArray","selected","setSelected","_jsxs","FormGroup","children","_jsx","FormLabel","FormControl","className","Select","size","labelId","multiple","value","onChange","event","target","length","renderValue","map","item","concat","option","id","MenuItem","display","ListItemIcon","Checkbox","checked","indexOf","ListItemText","primary","FlexBox","styled","Box","alignItems","JustifyBox","justifyContent","Container","borderRadius","borderColor","registerDoc","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","user","wrap","_context","prev","next","axios","url","sent","abrupt","stop","_x","apply","arguments","useTheme","navigate","useNavigate","loading","setLoading","_useState3","_useState4","allergies","setAllergies","_useState5","_useState6","foods","setFoods","_useState7","_useState8","selectedFoods","setSelectedFoods","_useState9","anyAllergies","beenDiagnosed","diagnosedDisease","recommendedBy","_useState10","request","setRequest","_useState11","_useState12","setSuggestedFoods","requestId","useParams","fetchFoods","_ref2","_callee2","_yield$axios$get","_context2","fetchFoodDetails","_ref3","_callee3","_yield$axios$get2","_context3","allergicFoods","split","name","pop","updateData","_ref4","_callee4","_context4","_x2","sendRequest","_ref5","_callee5","_context5","_x3","useEffect","handleFormSubmit","_ref6","_callee6","values","foodAllergies","_iterator","_step","food","recommendedFoods","_iterator2","_step2","_food","obj","_context6","_createForOfIteratorHelper","s","n","done","err","e","f","_objectSpread","t0","_x4","validationSchema","Yup","shape","required","nullable","description","Card","Typography","sx","textAlign","Grid","container","sm","xs","p","height","Formik","enableReinitialize","onSubmit","initialValues","_ref7","errors","touched","handleChange","handleBlur","handleSubmit","lg","RadioGroup","defaultValue","flexDirection","FormControlLabel","control","Radio","MultiSelect","TextField","fullWidth","type","onBlur","helperText","error","Boolean","mb","LoadingButton","mt"],"sourceRoot":""}